angular.module("cmanaha.angular-elasticsearch-logger",["elasticsearch"]).provider("CMRESLogger",[function(){var a=this;a.esClientDetils={},a.logDetails={index:"defaul_js_index",type:"jslog",bufferSize:5e3,flushIntervalInMS:2500,logToConsole:!0},a.appDetails={},a.setElasticSearchConfig=function(b){a.esClientDetils=b},a.setLogConfig=function(b){a.logDetails=b},a.setApplicationLogContext=function(b){a.appDetails=b},a.$get=["$injector",function(b){var c=b.get("esFactory"),d=b.get("$interval");a.logBuffer=[];var e=c;return a.esClient=e(a.esClientDetils),a.level={INFO:"INFO",DEBUG:"DEBUG",ERROR:"ERROR",WARN:"WARNING"},a.numPadding=function(a,b){for(var c=a+"";c.length<b;)c="0"+c;return c},a.getIndexName=function(b){var c=new Date(Date.now()),d=b+"-"+c.getUTCFullYear()+"."+a.numPadding(c.getUTCMonth()+1,2)+"."+a.numPadding(c.getUTCDate(),2);return d},a.decodeStackTraceLine=function(a){var b=a.split(".js"),c=b[0]+".js",d=b[1].split(":")[1],e=b[1].split(":")[2];return[c,d,e]},a.internalLog=function(b,c,d){a.logBuffer.push({index:{_index:a.getIndexName(a.logDetails.index),_type:a.logDetails.type}});var e={message:b,level:c,timestamp:new Date(Date.now()).toISOString(),browserName:navigator.appName,browserVersion:navigator.appVersion,browserMinVersion:navigator.appMinorVersion,browserProduct:navigator.product,browserVendor:navigator.vendor,browserUserAgent:navigator.userAgent,browserUserLang:navigator.userLanguage,browserConSpeed:navigator.connectionSpeed,browserLang:navigator.browserLanguage,browserGeolocation:navigator.geolocation};angular.forEach(a.appDetails,function(a,b){e[b]=a});var f=[],g=[];if("undefined"==typeof d)f=printStackTrace();else{f=printStackTrace(d);var h=f.slice(5),i="Exception Msg [ "+d.message+"] \n";angular.forEach(h,function(b){g=a.decodeStackTraceLine(b),i=i+"	"+g[0]+" LineNum ["+g[1]+"] charNum ["+g[2]+"]\n"}),e.stacktrace=i}g=a.decodeStackTraceLine(f[5]),e.method=g[0],e.lineNum=g[1],e.charNum=g[2],a.logBuffer.push(e),a.logBuffer.length/2>=a.logDetails.bufferSize&&a.flush()},a.flush=function(){a.logBuffer.length>0&&(a.esClient.bulk({body:a.logBuffer},function(b,c){b&&void 0!==a.logDetails.internalLogFunction&&a.logDetails.internalLogFunction("Got an error ["+b+"]while storing log : "+angular.toJson(c,!0))}),a.logBuffer=[])},a.flushInterval=d(a.flush,a.logDetails.flushIntervalInMS),{info:function(b){a.internalLog(b,a.level.INFO,void 0)},warning:function(b){a.internalLog(b,a.level.WARN,void 0)},error:function(b){a.internalLog(b,a.level.ERROR,void 0)},debug:function(b){a.internalLog(b,a.level.DEBUG,void 0)},warningWithException:function(b,c){a.internalLog(b,a.level.WARN,c)},errorWithException:function(b,c){a.internalLog(b,a.level.ERROR,c)}}}]}]);
//# sourceMappingURL=angular-elasticsearch-logger.min.map